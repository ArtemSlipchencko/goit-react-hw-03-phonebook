{"version":3,"sources":["components/Form/Form.jsx","components/Contascts/Contacts.jsx","components/Filter/Filter.jsx","components/App/App.jsx","index.js"],"names":["Form","state","name","number","handleChange","target","value","setState","handlerSubmit","e","preventDefault","addContact","props","newContact","prevState","id","shortId","generate","this","className","onSubmit","htmlFor","onChange","type","Component","Contacts","contacts","deleteContact","map","el","onClick","Filter","filter","handleFilter","App","findContact","contact","toLowerCase","includes","find","alert","localContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","searchedContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f2859b6.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport shortId from 'short-id';\nimport './Form.css';\n\nclass Form extends Component {\n\n    state = {\n        name: \"\",\n        number: \"\"\n    };\n\n    handleChange = ({target}) => {\n        \n        const {name, value} = target;\n\n        this.setState( {[name]: value} );\n         \n    };\n            \n    handlerSubmit = (e) => {\n\n        e.preventDefault();\n        const {addContact} = this.props;\n        const contact = this.newContact();\n        addContact(contact);\n        this.setState(prevState => {\n            \n            return {name: '', number: ''}\n\n        });\n\n    };\n\n    newContact = () => {\n\n        const {name, number} = this.state;\n        return {name: name, number: number, id: shortId.generate()};\n\n    };\n\n    render() {\n\n        const {name, number} = this.state;\n\n        return(\n            <form className=\"form\" onSubmit={this.handlerSubmit}>\n                <label htmlFor=\"contactName\" >Name</label>\n                <input name=\"name\" onChange={this.handleChange} value={name} type=\"text\"/>\n                <label htmlFor=\"contactNumber\" >Number</label>\n                <input name=\"number\" onChange={this.handleChange} value={number} type=\"number\"/>\n                <button type=\"submit\">Add Contact</button>\n            </form>\n        )\n    };\n\n};\n\nexport default Form;","import React, { Component } from 'react';\nimport './Contacts.css';\nimport PropTypes from 'prop-types';\n\nclass Contacts extends Component {\n\n    static propTypes = {\n        contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n        deleteContact: PropTypes.func.isRequired,\n      };\n\n    render() {\n        \n        const {contacts, deleteContact} = this.props;\n        \n        return (\n            <ul>\n\n                {\n                    contacts.map(el => {\n                        return (\n                            <li key={el.id}>{el.name}: {el.number} <button type=\"button\" onClick={() => deleteContact(el.id)}>Delete</button></li>\n                        )\n                    })\n                }\n\n            </ul>\n    )}\n\n};\n\nexport default Contacts;","import React, { Component } from 'react';\nimport './Filter.css';\nimport PropTypes from 'prop-types';\n\nclass Filter extends Component { \n\n  static propTypes = {\n    filter: PropTypes.string.isRequired,\n    handleFilter: PropTypes.func.isRequired,\n  };\n  \n  render () {\n\n    const {filter, handleFilter} = this.props;\n\n    return (\n\n        <div className=\"input\">\n                <input type=\"text\" onChange={handleFilter} value={filter} />\n        </div>\n\n    );\n  };\n};\n\nexport default Filter;","import React, {Component} from 'react';\nimport './App.css';\nimport Form from '../Form/Form';\nimport Contacts from '../Contascts/Contacts';\nimport Filter from '../Filter/Filter';\n\nclass App extends Component {\n\n    state = {\n        contacts: [\n            {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n            {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n            {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n            {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'}\n        ],\n        filter: ''\n    };\n\n    componentDidMount() {\n\n        const localContacts = localStorage.getItem('contacts');\n    \n        if(localContacts) {\n            this.setState({contacts: JSON.parse(localContacts)});\n        }\n\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n\n        if(prevState !== this.state.contacts) {\n            localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n        }\n\n    };\n\n    findContact = () => {\n\n        const {contacts, filter} = this.state;\n            return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()),\n        );\n\n    };\n\n    handleFilter = (e) => {\n\n        this.setState(prevState => {\n            return {filter: e.target.value}\n        });\n\n      };\n\n    addContact = (contact) => {\n\n        const {contacts} = this.state;\n\n        if (contacts.find((el) => el.name === contact.name)) {\n            alert(`${contact.name} is already in contacts`);\n            return;\n        };\n        this.setState( state => {\n            const contacts = [...state.contacts, contact];\n            return { contacts };\n        });\n        \n    };\n\n    deleteContact = (id) => {\n\n        this.setState(prevState => {\n            return {contacts: prevState.contacts.filter(contact => contact.id !== id)};\n        });\n\n    };\n\n    render() {\n\n        const {filter} = this.state;\n        const searchedContacts = this.findContact();\n\n        return (\n            <>\n                <h1>Phone book</h1>\n                <h2>Contacts form</h2>\n                <Form addContact={this.addContact} />\n                <h2>Contacts list</h2>\n                <Filter filter={filter} handleFilter={this.handleFilter} />\n                <Contacts contacts={searchedContacts} deleteContact={this.deleteContact} />\n            </>\n        );\n\n    };\n\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}